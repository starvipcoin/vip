// Generated by view binder compiler. Do not edit!
package com.devlomi.fireapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SwitchCompat;
import androidx.cardview.widget.CardView;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.devlomi.fireapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ContentUserDetailsBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final CardView aboutAndPhoneNumber;

  @NonNull
  public final CardView cardViewBlock;

  @NonNull
  public final CardView cardViewExitGroup;

  @NonNull
  public final CardView cardViewMedia;

  @NonNull
  public final CardView groupParticipants;

  @NonNull
  public final View groupSeparator;

  @NonNull
  public final View groupSeparatorTwo;

  @NonNull
  public final FrameLayout layoutMute;

  @NonNull
  public final FrameLayout layoutOnlyAdminsCanPost;

  @NonNull
  public final RecyclerView rvHorizontalMedia;

  @NonNull
  public final RecyclerView rvParticipants;

  @NonNull
  public final LinearLayout shareInviteLink;

  @NonNull
  public final LinearLayout shareLinkLayout;

  @NonNull
  public final SwitchCompat switchAdminsOnlyCanPost;

  @NonNull
  public final SwitchCompat switchMute;

  @NonNull
  public final TextView tvAddParticipants;

  @NonNull
  public final TextView tvBlock;

  @NonNull
  public final TextView tvCantSendMessages;

  @NonNull
  public final TextView tvCountMedia;

  @NonNull
  public final TextView tvExitGroup;

  @NonNull
  public final TextView tvNumberDetails;

  @NonNull
  public final TextView tvParticipantsCount;

  @NonNull
  public final TextView tvStatusDetails;

  private ContentUserDetailsBinding(@NonNull NestedScrollView rootView,
      @NonNull CardView aboutAndPhoneNumber, @NonNull CardView cardViewBlock,
      @NonNull CardView cardViewExitGroup, @NonNull CardView cardViewMedia,
      @NonNull CardView groupParticipants, @NonNull View groupSeparator,
      @NonNull View groupSeparatorTwo, @NonNull FrameLayout layoutMute,
      @NonNull FrameLayout layoutOnlyAdminsCanPost, @NonNull RecyclerView rvHorizontalMedia,
      @NonNull RecyclerView rvParticipants, @NonNull LinearLayout shareInviteLink,
      @NonNull LinearLayout shareLinkLayout, @NonNull SwitchCompat switchAdminsOnlyCanPost,
      @NonNull SwitchCompat switchMute, @NonNull TextView tvAddParticipants,
      @NonNull TextView tvBlock, @NonNull TextView tvCantSendMessages,
      @NonNull TextView tvCountMedia, @NonNull TextView tvExitGroup,
      @NonNull TextView tvNumberDetails, @NonNull TextView tvParticipantsCount,
      @NonNull TextView tvStatusDetails) {
    this.rootView = rootView;
    this.aboutAndPhoneNumber = aboutAndPhoneNumber;
    this.cardViewBlock = cardViewBlock;
    this.cardViewExitGroup = cardViewExitGroup;
    this.cardViewMedia = cardViewMedia;
    this.groupParticipants = groupParticipants;
    this.groupSeparator = groupSeparator;
    this.groupSeparatorTwo = groupSeparatorTwo;
    this.layoutMute = layoutMute;
    this.layoutOnlyAdminsCanPost = layoutOnlyAdminsCanPost;
    this.rvHorizontalMedia = rvHorizontalMedia;
    this.rvParticipants = rvParticipants;
    this.shareInviteLink = shareInviteLink;
    this.shareLinkLayout = shareLinkLayout;
    this.switchAdminsOnlyCanPost = switchAdminsOnlyCanPost;
    this.switchMute = switchMute;
    this.tvAddParticipants = tvAddParticipants;
    this.tvBlock = tvBlock;
    this.tvCantSendMessages = tvCantSendMessages;
    this.tvCountMedia = tvCountMedia;
    this.tvExitGroup = tvExitGroup;
    this.tvNumberDetails = tvNumberDetails;
    this.tvParticipantsCount = tvParticipantsCount;
    this.tvStatusDetails = tvStatusDetails;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ContentUserDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ContentUserDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.content_user_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ContentUserDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.about_and_phone_number;
      CardView aboutAndPhoneNumber = ViewBindings.findChildViewById(rootView, id);
      if (aboutAndPhoneNumber == null) {
        break missingId;
      }

      id = R.id.card_view_block;
      CardView cardViewBlock = ViewBindings.findChildViewById(rootView, id);
      if (cardViewBlock == null) {
        break missingId;
      }

      id = R.id.card_view_exit_group;
      CardView cardViewExitGroup = ViewBindings.findChildViewById(rootView, id);
      if (cardViewExitGroup == null) {
        break missingId;
      }

      id = R.id.card_view_media;
      CardView cardViewMedia = ViewBindings.findChildViewById(rootView, id);
      if (cardViewMedia == null) {
        break missingId;
      }

      id = R.id.group_participants;
      CardView groupParticipants = ViewBindings.findChildViewById(rootView, id);
      if (groupParticipants == null) {
        break missingId;
      }

      id = R.id.group_separator;
      View groupSeparator = ViewBindings.findChildViewById(rootView, id);
      if (groupSeparator == null) {
        break missingId;
      }

      id = R.id.group_separator_two;
      View groupSeparatorTwo = ViewBindings.findChildViewById(rootView, id);
      if (groupSeparatorTwo == null) {
        break missingId;
      }

      id = R.id.layout_mute;
      FrameLayout layoutMute = ViewBindings.findChildViewById(rootView, id);
      if (layoutMute == null) {
        break missingId;
      }

      id = R.id.layout_only_admins_can_post;
      FrameLayout layoutOnlyAdminsCanPost = ViewBindings.findChildViewById(rootView, id);
      if (layoutOnlyAdminsCanPost == null) {
        break missingId;
      }

      id = R.id.rv_horizontal_media;
      RecyclerView rvHorizontalMedia = ViewBindings.findChildViewById(rootView, id);
      if (rvHorizontalMedia == null) {
        break missingId;
      }

      id = R.id.rv_participants;
      RecyclerView rvParticipants = ViewBindings.findChildViewById(rootView, id);
      if (rvParticipants == null) {
        break missingId;
      }

      id = R.id.share_invite_link;
      LinearLayout shareInviteLink = ViewBindings.findChildViewById(rootView, id);
      if (shareInviteLink == null) {
        break missingId;
      }

      id = R.id.share_link_layout;
      LinearLayout shareLinkLayout = ViewBindings.findChildViewById(rootView, id);
      if (shareLinkLayout == null) {
        break missingId;
      }

      id = R.id.switch_admins_only_can_post;
      SwitchCompat switchAdminsOnlyCanPost = ViewBindings.findChildViewById(rootView, id);
      if (switchAdminsOnlyCanPost == null) {
        break missingId;
      }

      id = R.id.switch_mute;
      SwitchCompat switchMute = ViewBindings.findChildViewById(rootView, id);
      if (switchMute == null) {
        break missingId;
      }

      id = R.id.tv_add_participants;
      TextView tvAddParticipants = ViewBindings.findChildViewById(rootView, id);
      if (tvAddParticipants == null) {
        break missingId;
      }

      id = R.id.tv_block;
      TextView tvBlock = ViewBindings.findChildViewById(rootView, id);
      if (tvBlock == null) {
        break missingId;
      }

      id = R.id.tv_cant_send_messages;
      TextView tvCantSendMessages = ViewBindings.findChildViewById(rootView, id);
      if (tvCantSendMessages == null) {
        break missingId;
      }

      id = R.id.tv_count_media;
      TextView tvCountMedia = ViewBindings.findChildViewById(rootView, id);
      if (tvCountMedia == null) {
        break missingId;
      }

      id = R.id.tv_exit_group;
      TextView tvExitGroup = ViewBindings.findChildViewById(rootView, id);
      if (tvExitGroup == null) {
        break missingId;
      }

      id = R.id.tv_number_details;
      TextView tvNumberDetails = ViewBindings.findChildViewById(rootView, id);
      if (tvNumberDetails == null) {
        break missingId;
      }

      id = R.id.tv_participants_count;
      TextView tvParticipantsCount = ViewBindings.findChildViewById(rootView, id);
      if (tvParticipantsCount == null) {
        break missingId;
      }

      id = R.id.tv_status_details;
      TextView tvStatusDetails = ViewBindings.findChildViewById(rootView, id);
      if (tvStatusDetails == null) {
        break missingId;
      }

      return new ContentUserDetailsBinding((NestedScrollView) rootView, aboutAndPhoneNumber,
          cardViewBlock, cardViewExitGroup, cardViewMedia, groupParticipants, groupSeparator,
          groupSeparatorTwo, layoutMute, layoutOnlyAdminsCanPost, rvHorizontalMedia, rvParticipants,
          shareInviteLink, shareLinkLayout, switchAdminsOnlyCanPost, switchMute, tvAddParticipants,
          tvBlock, tvCantSendMessages, tvCountMedia, tvExitGroup, tvNumberDetails,
          tvParticipantsCount, tvStatusDetails);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
