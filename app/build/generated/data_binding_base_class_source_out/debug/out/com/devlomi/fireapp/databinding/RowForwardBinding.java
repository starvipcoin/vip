// Generated by view binder compiler. Do not edit!
package com.devlomi.fireapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.devlomi.fireapp.R;
import com.devlomi.hidely.hidelyviews.HidelyImageView;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RowForwardBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout containerLayout;

  @NonNull
  public final RelativeLayout content;

  @NonNull
  public final HidelyImageView imgSelected;

  @NonNull
  public final TextView tvName;

  @NonNull
  public final TextView tvStatus;

  @NonNull
  public final FrameLayout userImgFrameLo;

  @NonNull
  public final CircleImageView userPhoto;

  private RowForwardBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout containerLayout, @NonNull RelativeLayout content,
      @NonNull HidelyImageView imgSelected, @NonNull TextView tvName, @NonNull TextView tvStatus,
      @NonNull FrameLayout userImgFrameLo, @NonNull CircleImageView userPhoto) {
    this.rootView = rootView;
    this.containerLayout = containerLayout;
    this.content = content;
    this.imgSelected = imgSelected;
    this.tvName = tvName;
    this.tvStatus = tvStatus;
    this.userImgFrameLo = userImgFrameLo;
    this.userPhoto = userPhoto;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowForwardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowForwardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_forward, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowForwardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      RelativeLayout containerLayout = (RelativeLayout) rootView;

      id = R.id.content;
      RelativeLayout content = ViewBindings.findChildViewById(rootView, id);
      if (content == null) {
        break missingId;
      }

      id = R.id.img_selected;
      HidelyImageView imgSelected = ViewBindings.findChildViewById(rootView, id);
      if (imgSelected == null) {
        break missingId;
      }

      id = R.id.tv_name;
      TextView tvName = ViewBindings.findChildViewById(rootView, id);
      if (tvName == null) {
        break missingId;
      }

      id = R.id.tv_status;
      TextView tvStatus = ViewBindings.findChildViewById(rootView, id);
      if (tvStatus == null) {
        break missingId;
      }

      id = R.id.user_img_frame_lo;
      FrameLayout userImgFrameLo = ViewBindings.findChildViewById(rootView, id);
      if (userImgFrameLo == null) {
        break missingId;
      }

      id = R.id.user_photo;
      CircleImageView userPhoto = ViewBindings.findChildViewById(rootView, id);
      if (userPhoto == null) {
        break missingId;
      }

      return new RowForwardBinding((RelativeLayout) rootView, containerLayout, content, imgSelected,
          tvName, tvStatus, userImgFrameLo, userPhoto);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
