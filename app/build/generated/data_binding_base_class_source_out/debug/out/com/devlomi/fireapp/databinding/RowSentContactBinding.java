// Generated by view binder compiler. Do not edit!
package com.devlomi.fireapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.devlomi.fireapp.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RowSentContactBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final Button btnMessageContact;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final LinearLayout container;

  @NonNull
  public final View hseperatorContact;

  @NonNull
  public final CircleImageView imgContact;

  @NonNull
  public final ImageView messageStatImg;

  @NonNull
  public final RelativeLayout relativeContactInfo;

  @NonNull
  public final TextView tvContactName;

  @NonNull
  public final TextView tvTime;

  private RowSentContactBinding(@NonNull FrameLayout rootView, @NonNull Button btnMessageContact,
      @NonNull CardView cardView, @NonNull LinearLayout container, @NonNull View hseperatorContact,
      @NonNull CircleImageView imgContact, @NonNull ImageView messageStatImg,
      @NonNull RelativeLayout relativeContactInfo, @NonNull TextView tvContactName,
      @NonNull TextView tvTime) {
    this.rootView = rootView;
    this.btnMessageContact = btnMessageContact;
    this.cardView = cardView;
    this.container = container;
    this.hseperatorContact = hseperatorContact;
    this.imgContact = imgContact;
    this.messageStatImg = messageStatImg;
    this.relativeContactInfo = relativeContactInfo;
    this.tvContactName = tvContactName;
    this.tvTime = tvTime;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowSentContactBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowSentContactBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_sent_contact, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowSentContactBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_message_contact;
      Button btnMessageContact = ViewBindings.findChildViewById(rootView, id);
      if (btnMessageContact == null) {
        break missingId;
      }

      id = R.id.card_view;
      CardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.container;
      LinearLayout container = ViewBindings.findChildViewById(rootView, id);
      if (container == null) {
        break missingId;
      }

      id = R.id.hseperator_contact;
      View hseperatorContact = ViewBindings.findChildViewById(rootView, id);
      if (hseperatorContact == null) {
        break missingId;
      }

      id = R.id.img_contact;
      CircleImageView imgContact = ViewBindings.findChildViewById(rootView, id);
      if (imgContact == null) {
        break missingId;
      }

      id = R.id.message_stat_img;
      ImageView messageStatImg = ViewBindings.findChildViewById(rootView, id);
      if (messageStatImg == null) {
        break missingId;
      }

      id = R.id.relative_contact_info;
      RelativeLayout relativeContactInfo = ViewBindings.findChildViewById(rootView, id);
      if (relativeContactInfo == null) {
        break missingId;
      }

      id = R.id.tv_contact_name;
      TextView tvContactName = ViewBindings.findChildViewById(rootView, id);
      if (tvContactName == null) {
        break missingId;
      }

      id = R.id.tv_time;
      TextView tvTime = ViewBindings.findChildViewById(rootView, id);
      if (tvTime == null) {
        break missingId;
      }

      return new RowSentContactBinding((FrameLayout) rootView, btnMessageContact, cardView,
          container, hseperatorContact, imgContact, messageStatImg, relativeContactInfo,
          tvContactName, tvTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
