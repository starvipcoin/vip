// Generated by view binder compiler. Do not edit!
package com.devlomi.fireapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.SeekBar;
import android.widget.TextView;
import android.widget.VideoView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.devlomi.fireapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentVideoViewBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageButton btnPlayVideo;

  @NonNull
  public final ImageView imageThumb;

  @NonNull
  public final LinearLayout seekbarContainer;

  @NonNull
  public final SeekBar seekbarVideo;

  @NonNull
  public final TextView tvSeekbarCurrent;

  @NonNull
  public final TextView tvSeekbarTotal;

  @NonNull
  public final VideoView videoView;

  private FragmentVideoViewBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageButton btnPlayVideo, @NonNull ImageView imageThumb,
      @NonNull LinearLayout seekbarContainer, @NonNull SeekBar seekbarVideo,
      @NonNull TextView tvSeekbarCurrent, @NonNull TextView tvSeekbarTotal,
      @NonNull VideoView videoView) {
    this.rootView = rootView;
    this.btnPlayVideo = btnPlayVideo;
    this.imageThumb = imageThumb;
    this.seekbarContainer = seekbarContainer;
    this.seekbarVideo = seekbarVideo;
    this.tvSeekbarCurrent = tvSeekbarCurrent;
    this.tvSeekbarTotal = tvSeekbarTotal;
    this.videoView = videoView;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentVideoViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentVideoViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_video_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentVideoViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_play_video;
      ImageButton btnPlayVideo = ViewBindings.findChildViewById(rootView, id);
      if (btnPlayVideo == null) {
        break missingId;
      }

      id = R.id.image_thumb;
      ImageView imageThumb = ViewBindings.findChildViewById(rootView, id);
      if (imageThumb == null) {
        break missingId;
      }

      id = R.id.seekbar_container;
      LinearLayout seekbarContainer = ViewBindings.findChildViewById(rootView, id);
      if (seekbarContainer == null) {
        break missingId;
      }

      id = R.id.seekbar_video;
      SeekBar seekbarVideo = ViewBindings.findChildViewById(rootView, id);
      if (seekbarVideo == null) {
        break missingId;
      }

      id = R.id.tv_seekbar_current;
      TextView tvSeekbarCurrent = ViewBindings.findChildViewById(rootView, id);
      if (tvSeekbarCurrent == null) {
        break missingId;
      }

      id = R.id.tv_seekbar_total;
      TextView tvSeekbarTotal = ViewBindings.findChildViewById(rootView, id);
      if (tvSeekbarTotal == null) {
        break missingId;
      }

      id = R.id.video_view;
      VideoView videoView = ViewBindings.findChildViewById(rootView, id);
      if (videoView == null) {
        break missingId;
      }

      return new FragmentVideoViewBinding((RelativeLayout) rootView, btnPlayVideo, imageThumb,
          seekbarContainer, seekbarVideo, tvSeekbarCurrent, tvSeekbarTotal, videoView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
