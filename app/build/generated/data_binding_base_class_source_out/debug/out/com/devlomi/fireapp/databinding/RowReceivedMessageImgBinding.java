// Generated by view binder compiler. Do not edit!
package com.devlomi.fireapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.devlomi.fireapp.R;
import com.devlomi.fireapp.views.backgroundtintlayouts.LinearLayoutWithBackgroundTint;
import com.github.abdularis.buttonprogress.DownloadButtonProgress;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RowReceivedMessageImgBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayoutWithBackgroundTint container;

  @NonNull
  public final ImageView imgMsg;

  @NonNull
  public final DownloadButtonProgress progressButton;

  @NonNull
  public final RelativeLayout progressViewLayout;

  @NonNull
  public final TextView tvSize;

  @NonNull
  public final TextView tvTime;

  @NonNull
  public final TextView tvUsernameGroup;

  private RowReceivedMessageImgBinding(@NonNull RelativeLayout rootView,
      @NonNull LinearLayoutWithBackgroundTint container, @NonNull ImageView imgMsg,
      @NonNull DownloadButtonProgress progressButton, @NonNull RelativeLayout progressViewLayout,
      @NonNull TextView tvSize, @NonNull TextView tvTime, @NonNull TextView tvUsernameGroup) {
    this.rootView = rootView;
    this.container = container;
    this.imgMsg = imgMsg;
    this.progressButton = progressButton;
    this.progressViewLayout = progressViewLayout;
    this.tvSize = tvSize;
    this.tvTime = tvTime;
    this.tvUsernameGroup = tvUsernameGroup;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowReceivedMessageImgBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowReceivedMessageImgBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_received_message_img, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowReceivedMessageImgBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.container;
      LinearLayoutWithBackgroundTint container = ViewBindings.findChildViewById(rootView, id);
      if (container == null) {
        break missingId;
      }

      id = R.id.img_msg;
      ImageView imgMsg = ViewBindings.findChildViewById(rootView, id);
      if (imgMsg == null) {
        break missingId;
      }

      id = R.id.progress_button;
      DownloadButtonProgress progressButton = ViewBindings.findChildViewById(rootView, id);
      if (progressButton == null) {
        break missingId;
      }

      id = R.id.progress_view_layout;
      RelativeLayout progressViewLayout = ViewBindings.findChildViewById(rootView, id);
      if (progressViewLayout == null) {
        break missingId;
      }

      id = R.id.tv_size;
      TextView tvSize = ViewBindings.findChildViewById(rootView, id);
      if (tvSize == null) {
        break missingId;
      }

      id = R.id.tv_time;
      TextView tvTime = ViewBindings.findChildViewById(rootView, id);
      if (tvTime == null) {
        break missingId;
      }

      id = R.id.tv_username_group;
      TextView tvUsernameGroup = ViewBindings.findChildViewById(rootView, id);
      if (tvUsernameGroup == null) {
        break missingId;
      }

      return new RowReceivedMessageImgBinding((RelativeLayout) rootView, container, imgMsg,
          progressButton, progressViewLayout, tvSize, tvTime, tvUsernameGroup);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
