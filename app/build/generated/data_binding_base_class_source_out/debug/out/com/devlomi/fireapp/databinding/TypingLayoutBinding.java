// Generated by view binder compiler. Do not edit!
package com.devlomi.fireapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.devlomi.fireapp.R;
import com.devlomi.fireapp.views.ChatEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TypingLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView cameraBtn;

  @NonNull
  public final ImageView emojiBtn;

  @NonNull
  public final ChatEditText etMessage;

  @NonNull
  public final ImageView imgAttachment;

  @NonNull
  public final LinearLayout typingLayout;

  private TypingLayoutBinding(@NonNull LinearLayout rootView, @NonNull ImageView cameraBtn,
      @NonNull ImageView emojiBtn, @NonNull ChatEditText etMessage,
      @NonNull ImageView imgAttachment, @NonNull LinearLayout typingLayout) {
    this.rootView = rootView;
    this.cameraBtn = cameraBtn;
    this.emojiBtn = emojiBtn;
    this.etMessage = etMessage;
    this.imgAttachment = imgAttachment;
    this.typingLayout = typingLayout;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TypingLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TypingLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.typing_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TypingLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.camera_btn;
      ImageView cameraBtn = ViewBindings.findChildViewById(rootView, id);
      if (cameraBtn == null) {
        break missingId;
      }

      id = R.id.emoji_btn;
      ImageView emojiBtn = ViewBindings.findChildViewById(rootView, id);
      if (emojiBtn == null) {
        break missingId;
      }

      id = R.id.et_message;
      ChatEditText etMessage = ViewBindings.findChildViewById(rootView, id);
      if (etMessage == null) {
        break missingId;
      }

      id = R.id.img_attachment;
      ImageView imgAttachment = ViewBindings.findChildViewById(rootView, id);
      if (imgAttachment == null) {
        break missingId;
      }

      LinearLayout typingLayout = (LinearLayout) rootView;

      return new TypingLayoutBinding((LinearLayout) rootView, cameraBtn, emojiBtn, etMessage,
          imgAttachment, typingLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
