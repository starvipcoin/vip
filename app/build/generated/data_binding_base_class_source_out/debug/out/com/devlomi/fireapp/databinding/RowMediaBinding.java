// Generated by view binder compiler. Do not edit!
package com.devlomi.fireapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.devlomi.fireapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RowMediaBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final ImageView imageViewMedia;

  @NonNull
  public final RelativeLayout layoutVideoInfoGallery;

  @NonNull
  public final TextView tvVideoLength;

  private RowMediaBinding(@NonNull FrameLayout rootView, @NonNull ImageView imageView,
      @NonNull ImageView imageViewMedia, @NonNull RelativeLayout layoutVideoInfoGallery,
      @NonNull TextView tvVideoLength) {
    this.rootView = rootView;
    this.imageView = imageView;
    this.imageViewMedia = imageViewMedia;
    this.layoutVideoInfoGallery = layoutVideoInfoGallery;
    this.tvVideoLength = tvVideoLength;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowMediaBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowMediaBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_media, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowMediaBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.image_view_media;
      ImageView imageViewMedia = ViewBindings.findChildViewById(rootView, id);
      if (imageViewMedia == null) {
        break missingId;
      }

      id = R.id.layout_video_info_gallery;
      RelativeLayout layoutVideoInfoGallery = ViewBindings.findChildViewById(rootView, id);
      if (layoutVideoInfoGallery == null) {
        break missingId;
      }

      id = R.id.tv_video_length;
      TextView tvVideoLength = ViewBindings.findChildViewById(rootView, id);
      if (tvVideoLength == null) {
        break missingId;
      }

      return new RowMediaBinding((FrameLayout) rootView, imageView, imageViewMedia,
          layoutVideoInfoGallery, tvVideoLength);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
